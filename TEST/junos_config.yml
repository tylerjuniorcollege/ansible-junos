---
- name: Junos commands Test
  hosts: Junos_all
  gather_facts: no
  roles:
    - Juniper.junos
    
  tasks:
    - name: Set protocols
      juniper_junos_config:
#        retrieve: 'committed'
#        diff: false
#        check: false
#        commit: false
#      register: response
#    - name: Print the lines in the config.
#      debug:
#        var: response.config_lines

#    - name: Append .foo to the hostname using private config mode.
#      juniper_junos_config:
#        config_mode: 'private'
#        load: 'merge'
#        lines:
#          - "set system host-name {{ inventory_hostname }}.foo"
#      register: response
#    - name: Print the config changes.
#      debug:
#        var: response.diff_lines
#
#    - name: Rollback to the previous config.
#      juniper_junos_config:
#        config_mode: 'private'
#        rollback: 1
#      register: response
#    - name: Print the config changes.
#      debug:
#        var: response.diff_lines

#    - name: Rollback to the rescue config.
#      juniper_junos_config:
#        rollback: 'rescue'
#      register: response
#    - name: Print the complete response.
#      debug:
#        var: response

#    - name: Load override from a file.
#      juniper_junos_config:
#        load: 'override'
#        src: "{{ inventory_hostname }}.conf"
#      register: response
#    - name: Print the complete response.
#      debug:
#        var: response

#    - name: Load from a Jinja2 template.
#      juniper_junos_config:
#        load: 'merge'
#        format: 'xml'
#        template: "{{ inventory_hostname }}.j2"
#        vars:
#          host: "{{ inventory_hostname }}"
#      register: response
#    - name: Print the complete response.
#      debug:
#        var: response

#    - name: Load from a file on the Junos device.
#      juniper_junos_config:
#        load: 'merge'
#        url: "{{ inventory_hostname }}.conf"
#      register: response
#    - name: Print the complete response.
#      debug:
#        var: response

#    - name: Load from a file on the Junos device, skip the commit check
#      juniper_junos_config:
#        load: 'merge'
#        url: "{{ inventory_hostname }}.conf"
#        check: false
#      register: response
#    - name: Print the msg.
#      debug:
#        var: response.msg

#    - name: Print diff between current and rollback 10. No check. No commit.
#      juniper_junos_config:
#        rollback: 11
#        diff: true
#        check: false
#        commit: false
#      register: response
#    - name: Print the msg.
#      debug:
#        var: response

#    - name: Retrieve [edit system services] of current committed config.
#      juniper_junos_config:
#        retrieve: 'committed'
#        filter: 'system/services'
#        diff: true
#        check: false
#        commit: false
#      register: response
#    - name: Print the resulting config lines.
#      debug:
#        var: response.config_lines

#    - name: Enable NETCONF SSH and traceoptions, save config, and diffs.
#      juniper_junos_config:
#        load: 'merge'
#        lines:
#          - 'set system services netconf ssh'
#          - 'set system services netconf traceoptions flag all'
#          - 'set system services netconf traceoptions file netconf.log'
#        format: 'set'
#        retrieve: 'candidate'
#        filter: 'system/services'
#        comment: 'Enable NETCONF with traceoptions'
#        dest_dir: './output'
#      register: response
#    - name: Print the complete response
#      debug:
#        var: response

#   - name: Load conf. Confirm within 5 min. Wait 3 secs between chk and commit
#      juniper_junos_config:
#        load: 'merge'
#        url: "{{ inventory_hostname }}.conf"
#        confirm: 5
#        check_commit_wait: 3
#      register: response
#    - name: Print the complete response
#      debug:
#        var: response
#    - name: Confirm the previous commit with a commit check (but no commit)
#      juniper_junos_config:
#        check: true
#        diff: false
#        commit: false
#      register: response
#    - name: Print the complete response
#      debug:
#       var: response
