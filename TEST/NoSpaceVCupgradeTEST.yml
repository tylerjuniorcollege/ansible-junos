---
- name: Install Junos OS  Not Enough Space error
  hosts: Junos_all
  roles: 
     - Juniper.junos 
  connection: local
  gather_facts: no
  
  vars:
    OS_version: 20.2R1-S2.1
    OS_package: junos-arm-32-20.2R1-S2.1.tgz
    pkg_dir: /var/lib/awx/custom-venv/junos/Firmware
    netconf_port: 830
    wait_time: 3600
    valid_tags: ['apply_to_backup', 'apply_to_master', 'apply_to_both', 'disable_gres_and_nsr']
    actions_apply_to_backup: ['Abort for Single RE devices','Copy the package to device','Apply software to backup RE', 'Reboot']
    actions_apply_to_master: ['Copy the package to device', 'Apply software to master RE', 'Reboot']
    actions_apply_to_both: ['Abort for Single RE devices', 'Copy the package to device','Apply software to both REs', 'Reboot']
    
  tasks:
  
    - name: Identify the Backup RE
      set_fact:
        bkp_re: "{% if ansible_facts.junos.RE0.mastership_state == 'backup' %}re0{% elif  ansible_facts.junos.RE1.mastership_state == 'backup' %}re1{% else %}{% endif %}"
      tags:
        - never
        - apply_to_backup

    - name: Set variables for Master RE
      set_fact:
          jjsc_kwargs_master: "{ {% if ansible_facts.junos.master == 'RE0' %}'re0': true{% elif ansible_facts.junos.master == 'RE1' %}'re1': true{% endif %} }"
      tags: 
        - never
        - apply_to_master

    - name: Set variables for Backup RE
      set_fact:
        jjsc_kwargs_bkp: "{ {% if bkp_re == 're0' %}'re0': true{% elif  bkp_re == 're1' %}'re1': true{% endif %} }"  
      tags:
        - never
        - apply_to_backup
        

  tasks:

    - name: Install package on Both REs
      juniper_junos_software:
        version: "{{ OS_version }}"
        local_package: "{{ pkg_dir }}/{{ OS_package }}"
        kwargs: {"no-copy": true,"force": true,"unlink": true}
        timeout: 1200
 #       reboot_pause: 50
        all_re: true
        reboot: no
        force_host: yes
      tags: 
         - never
