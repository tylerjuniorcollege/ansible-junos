 vars:
    valid_tags: ['apply_to_backup', 'apply_to_master', 'apply_to_both', 'disable_gres_and_nsr']
    valid_content_types_for_url: ['application/x-gtar-compressed']
    actions_apply_to_backup: ['Abort for Single RE devices', 'Copy the package to device', 'Delete old package files from both routing engines if any.', 'Perform request system storage cleanup', 'Apply software to backup RE', 'Reboot']
    actions_apply_to_master: ['Copy the package to device', 'Delete old package files from both routing engines if any.', 'Perform request system storage cleanup', 'Apply software to master RE', 'Reboot']
    actions_apply_to_both: ['Abort for Single RE devices', 'Copy the package to device', 'Delete old package files from both routing engines if any.', 'Perform request system storage cleanup', 'Apply software to both REs', 'Reboot']
    provider_details: {} # Default provider details
#      username: "{{ device_user_name }}"
#      password: "{{ device_user_passwd  }}"
#      host: "{{ inventory_hostname }}"


- name: Identify the Backup RE
      set_fact:
        bkp_re: "{% if ansible_facts.junos.RE0.mastership_state == 'backup' %}re0{% elif  ansible_facts.junos.RE1.mastership_state == 'backup' %}re1{% else %}{% endif %}"
      tags:
        - never
        - apply_to_backup

    - name: Set variables for Master RE
      set_fact:
          jjsc_kwargs_master: "{ {% if ansible_facts.junos.master == 'RE0' %}'re0': true{% elif ansible_facts.junos.master == 'RE1' %}'re1': true{% endif %} }"
      tags: 
        - never
        - apply_to_master

    - name: Set variables for Backup RE
      set_fact:
        jjsc_kwargs_bkp: "{ {% if bkp_re == 're0' %}'re0': true{% elif  bkp_re == 're1' %}'re1': true{% endif %} }"  
      tags:
        - never
        - apply_to_backup

    - name: "Delete the old package files on device. All '.tgz' files in /var/tmp/."
      juniper_junos_command:
        commands: ['file delete re0:/var/tmp/*tgz', 'file delete re1:/var/tmp/*tgz']
        provider: "{{ provider_details }}"
      tags:
        - never
        - apply_to_backup
        - apply_to_master
        - apply_to_both
 - name: Install package on Master RE
      juniper_junos_software_custom:
        all_re: no
        kwargs: "{{ jjsc_kwargs_master }}"
        local_package: "{{ resp_download_pkg.dest }}"
        validate: no
        reboot: yes
        reboot_pause: 50
        timeout: 1200
        provider: "{{ provider_details }}"
      tags:
        - never
        - apply_to_master

    - name: Install package on Backup RE
      juniper_junos_software_custom:
        all_re: no
        kwargs: "{{ jjsc_kwargs_bkp }}"
        local_package: "{{ resp_download_pkg.dest }}"
        validate: no
        reboot: yes
        reboot_pause: 50
        timeout: 1200
        provider: "{{ provider_details }}"
      tags:
        - never
        - apply_to_backup

    - name: Install package on Both REs
      juniper_junos_software_custom:
        all_re: yes
        local_package: "{{ resp_download_pkg.dest }}"
        validate: no
        reboot: yes
        reboot_pause: 50
        timeout: 1200
        provider: "{{ provider_details }}"
      tags:
        - never
